version: 0.2

env:
  secrets-manager:
    DOCKERHUB_USERNAME: "dockerhub/aaronmaxcarver:username"
    DOCKERHUB_PASSWORD: "dockerhub/aaronmaxcarver:password"
phases:
  install:
    runtime-versions:
      nodejs: 16
  pre_build:
    commands:
      # docker login to docker to prevent rate-limiting for pull from anonymous users
      - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
      # docker CLI tool login to ECR in order to push to ECR
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 897621100871.dkr.ecr.us-east-1.amazonaws.com
      - aws codeartifact login --tool npm --domain-owner 897621100871 --domain chrt --repository chrt-npm-packages
      - npm install
  build:
    commands:
      - docker build -t chrt-express-postgres-tradingdata .
      - docker tag chrt-express-postgres-tradingdata:latest 897621100871.dkr.ecr.us-east-1.amazonaws.com/chrt-express-postgres-tradingdata:latest
  post_build:
    commands:
      - docker push 897621100871.dkr.ecr.us-east-1.amazonaws.com/chrt-express-postgres-tradingdata:latest
      # below, "name" = Task Definition Name, or rather the Container Name listed under Task Definition Revisions in the AWS Console (perhaps the same as Task Def. name)
      - printf '[{"name":"express-postgress","imageUri":"897621100871.dkr.ecr.us-east-1.amazonaws.com/chrt-express-postgres-tradingdata:latest"}]' > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
