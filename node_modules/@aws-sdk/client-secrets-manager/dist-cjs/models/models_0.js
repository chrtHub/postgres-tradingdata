"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicateSecretToRegionsResponseFilterSensitiveLog = exports.ReplicateSecretToRegionsRequestFilterSensitiveLog = exports.RemoveRegionsFromReplicationResponseFilterSensitiveLog = exports.RemoveRegionsFromReplicationRequestFilterSensitiveLog = exports.PutSecretValueResponseFilterSensitiveLog = exports.PutSecretValueRequestFilterSensitiveLog = exports.PutResourcePolicyResponseFilterSensitiveLog = exports.PutResourcePolicyRequestFilterSensitiveLog = exports.ListSecretVersionIdsResponseFilterSensitiveLog = exports.SecretVersionsListEntryFilterSensitiveLog = exports.ListSecretVersionIdsRequestFilterSensitiveLog = exports.ListSecretsResponseFilterSensitiveLog = exports.SecretListEntryFilterSensitiveLog = exports.ListSecretsRequestFilterSensitiveLog = exports.GetSecretValueResponseFilterSensitiveLog = exports.GetSecretValueRequestFilterSensitiveLog = exports.GetResourcePolicyResponseFilterSensitiveLog = exports.GetResourcePolicyRequestFilterSensitiveLog = exports.GetRandomPasswordResponseFilterSensitiveLog = exports.GetRandomPasswordRequestFilterSensitiveLog = exports.FilterFilterSensitiveLog = exports.DescribeSecretResponseFilterSensitiveLog = exports.RotationRulesTypeFilterSensitiveLog = exports.DescribeSecretRequestFilterSensitiveLog = exports.DeleteSecretResponseFilterSensitiveLog = exports.DeleteSecretRequestFilterSensitiveLog = exports.DeleteResourcePolicyResponseFilterSensitiveLog = exports.DeleteResourcePolicyRequestFilterSensitiveLog = exports.CreateSecretResponseFilterSensitiveLog = exports.ReplicationStatusTypeFilterSensitiveLog = exports.CreateSecretRequestFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.CancelRotateSecretResponseFilterSensitiveLog = exports.CancelRotateSecretRequestFilterSensitiveLog = exports.ReplicaRegionTypeFilterSensitiveLog = exports.PublicPolicyException = exports.SortOrderType = exports.InvalidNextTokenException = exports.FilterNameStringType = exports.ResourceExistsException = exports.PreconditionNotMetException = exports.MalformedPolicyDocumentException = exports.LimitExceededException = exports.EncryptionFailure = exports.DecryptionFailure = exports.StatusType = exports.ResourceNotFoundException = exports.InvalidRequestException = exports.InvalidParameterException = exports.InternalServiceError = void 0;
exports.ValidateResourcePolicyResponseFilterSensitiveLog = exports.ValidationErrorsEntryFilterSensitiveLog = exports.ValidateResourcePolicyRequestFilterSensitiveLog = exports.UpdateSecretVersionStageResponseFilterSensitiveLog = exports.UpdateSecretVersionStageRequestFilterSensitiveLog = exports.UpdateSecretResponseFilterSensitiveLog = exports.UpdateSecretRequestFilterSensitiveLog = exports.UntagResourceRequestFilterSensitiveLog = exports.TagResourceRequestFilterSensitiveLog = exports.StopReplicationToReplicaResponseFilterSensitiveLog = exports.StopReplicationToReplicaRequestFilterSensitiveLog = exports.RotateSecretResponseFilterSensitiveLog = exports.RotateSecretRequestFilterSensitiveLog = exports.RestoreSecretResponseFilterSensitiveLog = exports.RestoreSecretRequestFilterSensitiveLog = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const SecretsManagerServiceException_1 = require("./SecretsManagerServiceException");
class InternalServiceError extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "InternalServiceError",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceError";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceError.prototype);
        this.Message = opts.Message;
    }
}
exports.InternalServiceError = InternalServiceError;
class InvalidParameterException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidParameterException = InvalidParameterException;
class InvalidRequestException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidRequestException = InvalidRequestException;
class ResourceNotFoundException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
var StatusType;
(function (StatusType) {
    StatusType["Failed"] = "Failed";
    StatusType["InProgress"] = "InProgress";
    StatusType["InSync"] = "InSync";
})(StatusType = exports.StatusType || (exports.StatusType = {}));
class DecryptionFailure extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "DecryptionFailure",
            $fault: "client",
            ...opts,
        });
        this.name = "DecryptionFailure";
        this.$fault = "client";
        Object.setPrototypeOf(this, DecryptionFailure.prototype);
        this.Message = opts.Message;
    }
}
exports.DecryptionFailure = DecryptionFailure;
class EncryptionFailure extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "EncryptionFailure",
            $fault: "client",
            ...opts,
        });
        this.name = "EncryptionFailure";
        this.$fault = "client";
        Object.setPrototypeOf(this, EncryptionFailure.prototype);
        this.Message = opts.Message;
    }
}
exports.EncryptionFailure = EncryptionFailure;
class LimitExceededException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
exports.LimitExceededException = LimitExceededException;
class MalformedPolicyDocumentException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "MalformedPolicyDocumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "MalformedPolicyDocumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);
        this.Message = opts.Message;
    }
}
exports.MalformedPolicyDocumentException = MalformedPolicyDocumentException;
class PreconditionNotMetException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "PreconditionNotMetException",
            $fault: "client",
            ...opts,
        });
        this.name = "PreconditionNotMetException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PreconditionNotMetException.prototype);
        this.Message = opts.Message;
    }
}
exports.PreconditionNotMetException = PreconditionNotMetException;
class ResourceExistsException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "ResourceExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceExistsException.prototype);
        this.Message = opts.Message;
    }
}
exports.ResourceExistsException = ResourceExistsException;
var FilterNameStringType;
(function (FilterNameStringType) {
    FilterNameStringType["all"] = "all";
    FilterNameStringType["description"] = "description";
    FilterNameStringType["name"] = "name";
    FilterNameStringType["primary_region"] = "primary-region";
    FilterNameStringType["tag_key"] = "tag-key";
    FilterNameStringType["tag_value"] = "tag-value";
})(FilterNameStringType = exports.FilterNameStringType || (exports.FilterNameStringType = {}));
class InvalidNextTokenException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidNextTokenException = InvalidNextTokenException;
var SortOrderType;
(function (SortOrderType) {
    SortOrderType["asc"] = "asc";
    SortOrderType["desc"] = "desc";
})(SortOrderType = exports.SortOrderType || (exports.SortOrderType = {}));
class PublicPolicyException extends SecretsManagerServiceException_1.SecretsManagerServiceException {
    constructor(opts) {
        super({
            name: "PublicPolicyException",
            $fault: "client",
            ...opts,
        });
        this.name = "PublicPolicyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PublicPolicyException.prototype);
        this.Message = opts.Message;
    }
}
exports.PublicPolicyException = PublicPolicyException;
const ReplicaRegionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaRegionTypeFilterSensitiveLog = ReplicaRegionTypeFilterSensitiveLog;
const CancelRotateSecretRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelRotateSecretRequestFilterSensitiveLog = CancelRotateSecretRequestFilterSensitiveLog;
const CancelRotateSecretResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelRotateSecretResponseFilterSensitiveLog = CancelRotateSecretResponseFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const CreateSecretRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SecretBinary && { SecretBinary: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SecretString && { SecretString: smithy_client_1.SENSITIVE_STRING }),
});
exports.CreateSecretRequestFilterSensitiveLog = CreateSecretRequestFilterSensitiveLog;
const ReplicationStatusTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicationStatusTypeFilterSensitiveLog = ReplicationStatusTypeFilterSensitiveLog;
const CreateSecretResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSecretResponseFilterSensitiveLog = CreateSecretResponseFilterSensitiveLog;
const DeleteResourcePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteResourcePolicyRequestFilterSensitiveLog = DeleteResourcePolicyRequestFilterSensitiveLog;
const DeleteResourcePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteResourcePolicyResponseFilterSensitiveLog = DeleteResourcePolicyResponseFilterSensitiveLog;
const DeleteSecretRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSecretRequestFilterSensitiveLog = DeleteSecretRequestFilterSensitiveLog;
const DeleteSecretResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSecretResponseFilterSensitiveLog = DeleteSecretResponseFilterSensitiveLog;
const DescribeSecretRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeSecretRequestFilterSensitiveLog = DescribeSecretRequestFilterSensitiveLog;
const RotationRulesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RotationRulesTypeFilterSensitiveLog = RotationRulesTypeFilterSensitiveLog;
const DescribeSecretResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeSecretResponseFilterSensitiveLog = DescribeSecretResponseFilterSensitiveLog;
const FilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FilterFilterSensitiveLog = FilterFilterSensitiveLog;
const GetRandomPasswordRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRandomPasswordRequestFilterSensitiveLog = GetRandomPasswordRequestFilterSensitiveLog;
const GetRandomPasswordResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RandomPassword && { RandomPassword: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetRandomPasswordResponseFilterSensitiveLog = GetRandomPasswordResponseFilterSensitiveLog;
const GetResourcePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetResourcePolicyRequestFilterSensitiveLog = GetResourcePolicyRequestFilterSensitiveLog;
const GetResourcePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetResourcePolicyResponseFilterSensitiveLog = GetResourcePolicyResponseFilterSensitiveLog;
const GetSecretValueRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetSecretValueRequestFilterSensitiveLog = GetSecretValueRequestFilterSensitiveLog;
const GetSecretValueResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SecretBinary && { SecretBinary: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SecretString && { SecretString: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetSecretValueResponseFilterSensitiveLog = GetSecretValueResponseFilterSensitiveLog;
const ListSecretsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListSecretsRequestFilterSensitiveLog = ListSecretsRequestFilterSensitiveLog;
const SecretListEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SecretListEntryFilterSensitiveLog = SecretListEntryFilterSensitiveLog;
const ListSecretsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListSecretsResponseFilterSensitiveLog = ListSecretsResponseFilterSensitiveLog;
const ListSecretVersionIdsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListSecretVersionIdsRequestFilterSensitiveLog = ListSecretVersionIdsRequestFilterSensitiveLog;
const SecretVersionsListEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SecretVersionsListEntryFilterSensitiveLog = SecretVersionsListEntryFilterSensitiveLog;
const ListSecretVersionIdsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListSecretVersionIdsResponseFilterSensitiveLog = ListSecretVersionIdsResponseFilterSensitiveLog;
const PutResourcePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutResourcePolicyRequestFilterSensitiveLog = PutResourcePolicyRequestFilterSensitiveLog;
const PutResourcePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutResourcePolicyResponseFilterSensitiveLog = PutResourcePolicyResponseFilterSensitiveLog;
const PutSecretValueRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SecretBinary && { SecretBinary: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SecretString && { SecretString: smithy_client_1.SENSITIVE_STRING }),
});
exports.PutSecretValueRequestFilterSensitiveLog = PutSecretValueRequestFilterSensitiveLog;
const PutSecretValueResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutSecretValueResponseFilterSensitiveLog = PutSecretValueResponseFilterSensitiveLog;
const RemoveRegionsFromReplicationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveRegionsFromReplicationRequestFilterSensitiveLog = RemoveRegionsFromReplicationRequestFilterSensitiveLog;
const RemoveRegionsFromReplicationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveRegionsFromReplicationResponseFilterSensitiveLog = RemoveRegionsFromReplicationResponseFilterSensitiveLog;
const ReplicateSecretToRegionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicateSecretToRegionsRequestFilterSensitiveLog = ReplicateSecretToRegionsRequestFilterSensitiveLog;
const ReplicateSecretToRegionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicateSecretToRegionsResponseFilterSensitiveLog = ReplicateSecretToRegionsResponseFilterSensitiveLog;
const RestoreSecretRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreSecretRequestFilterSensitiveLog = RestoreSecretRequestFilterSensitiveLog;
const RestoreSecretResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreSecretResponseFilterSensitiveLog = RestoreSecretResponseFilterSensitiveLog;
const RotateSecretRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RotateSecretRequestFilterSensitiveLog = RotateSecretRequestFilterSensitiveLog;
const RotateSecretResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RotateSecretResponseFilterSensitiveLog = RotateSecretResponseFilterSensitiveLog;
const StopReplicationToReplicaRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopReplicationToReplicaRequestFilterSensitiveLog = StopReplicationToReplicaRequestFilterSensitiveLog;
const StopReplicationToReplicaResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopReplicationToReplicaResponseFilterSensitiveLog = StopReplicationToReplicaResponseFilterSensitiveLog;
const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagResourceRequestFilterSensitiveLog = TagResourceRequestFilterSensitiveLog;
const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagResourceRequestFilterSensitiveLog = UntagResourceRequestFilterSensitiveLog;
const UpdateSecretRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SecretBinary && { SecretBinary: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SecretString && { SecretString: smithy_client_1.SENSITIVE_STRING }),
});
exports.UpdateSecretRequestFilterSensitiveLog = UpdateSecretRequestFilterSensitiveLog;
const UpdateSecretResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSecretResponseFilterSensitiveLog = UpdateSecretResponseFilterSensitiveLog;
const UpdateSecretVersionStageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSecretVersionStageRequestFilterSensitiveLog = UpdateSecretVersionStageRequestFilterSensitiveLog;
const UpdateSecretVersionStageResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSecretVersionStageResponseFilterSensitiveLog = UpdateSecretVersionStageResponseFilterSensitiveLog;
const ValidateResourcePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ValidateResourcePolicyRequestFilterSensitiveLog = ValidateResourcePolicyRequestFilterSensitiveLog;
const ValidationErrorsEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ValidationErrorsEntryFilterSensitiveLog = ValidationErrorsEntryFilterSensitiveLog;
const ValidateResourcePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ValidateResourcePolicyResponseFilterSensitiveLog = ValidateResourcePolicyResponseFilterSensitiveLog;
